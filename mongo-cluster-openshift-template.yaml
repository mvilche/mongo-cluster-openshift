      ##comienzo Template
    apiVersion: v1
    kind: Template
    metadata:
      name: kafka-mongodb-openshift-mvilche
      labels:
        template: kafka-mongodb-openshift-mvilche
        autor: "Martin_Fabrizzio_Vilche"
      annotations:
        openshift.io/display-name: "kafka-mongodb-openshift-mvilche"
        iconClass: "icon-github"
        description: >-
          APACHE KAFKA + mongodb + KAFKA MANAGER WEB
          Martin Fabrizzio Vilche.
          https://github.com/mvilche.
        openshift.io/provider-display-name: "Martin Fabrizzio Vilche"
        openshift.io/documentation-url: "https://github.com/mvilche/wildfly-s2i.git"
        openshift.io/support-url: "https://github.com/mvilche/wildfly-s2i.git"
    message: >-
      Los servicios iniciar√°n en un par de minutos...
      Martin Fabrizzio Vilche

    objects:


  ############################## inicio configsrv


    - apiVersion: v1
      data:
        mongod.conf: |-
          storage:
            dbPath: /opt/mongodb-data
            journal:
              enabled: true
          net:
            port: 27017
            bindIp: 0.0.0.0
          replication:
            replSetName: "replconfig01"
          sharding:
            clusterRole: configsvr
        inicializar.js: |-
          rs.initiate(
            {
              _id: "replconfig01",
              configsvr: true,
              members: [
                { _id : 0, host : "configsrv-0.mongodb-configsrv.${NAMESPACE}.svc.cluster.local:27017" },
                { _id : 1, host : "configsrv-1.mongodb-configsrv.${NAMESPACE}.svc.cluster.local:27017" },
                { _id : 2, host : "configsrv-2.mongodb-configsrv.${NAMESPACE}.svc.cluster.local:27017" }
              ]
            }
          )            
      kind: ConfigMap
      metadata:
        name: mongodb-configsrv



    - apiVersion: v1
      kind: Service
      metadata:
        name: mongodb-configsrv
        labels:
          app: mongo-cluster
      spec:
        ports:
        - port: 27017
          name: server
        clusterIP: None
        selector:
          service: mongodb-configsrv



    - apiVersion: apps/v1beta1
      kind: StatefulSet
      metadata:
        name: configsrv
      spec:
        selector:
          matchLabels:
            app: mongo-cluster
        serviceName: mongodb-configsrv
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
        replicas: 3
        template:
          metadata:
            annotations:
              alpha.image.policy.openshift.io/resolve-names: '*'
            labels:
              app: mongo-cluster
              service: mongodb-configsrv
          spec:
            containers:
            - env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              name: configsrv
              image: mongodb:4.2.0
              imagePullPolicy: Always
              command:
              - bash
              - "-c"
              - |
                /opt/mongodb/bin/mongod --config /opt/mongodb-config/mongod.conf
              resources:
                requests:
                  cpu: 500m
                  memory: 1Gi
                limits:
                  cpu: 1
                  memory: 2Gi
              ports:
              - containerPort: 27017
                name: server
              lifecycle:
                postStart:
                  exec:
                    command:
                    - bash
                    - "-c"
                    - |
                      /opt/checkMongo configsvr-0.mongodb-configsrv.${NAMESPACE}.svc.cluster.local
                      /opt/checkMongo configsvr-1.mongodb-configsrv.${NAMESPACE}.svc.cluster.local
                      /opt/checkMongo configsvr-2.mongodb-configsrv.${NAMESPACE}.svc.cluster.local                      
                      /opt/mongodb/bin/mongo < inicializar.js               
              volumeMounts:
              - name: data
                mountPath: /opt/mongodb-data
              - name: configmap
                mountPath: /opt/mongodb-config
              livenessProbe:
                exec:
                  command:
                  - bash
                  - "-c"
                  - |
                    nc -z -v -w5 127.0.0.1 27017
                    if [ "$?" == 0 ]; then
                    exit 0
                    else
                    exit 1
                    fi
                initialDelaySeconds: 90
                timeoutSeconds: 5
              readinessProbe:
                exec:
                  command:
                  - bash
                  - "-c"
                  - |
                    nc -z -v -w5 127.0.0.1 27017
                    if [ "$?" == 0 ]; then
                    exit 0
                    else
                    exit 1
                    fi
                initialDelaySeconds: 30
                timeoutSeconds: 15
            resources:
              requests:
                cpu: 500m
                memory: 128Mi
              limits:
                cpu: 1
                memory: 512Mi                     
            volumes:
            - name: configmap
              configMap:
                name: mongodb-configsrv
        volumeClaimTemplates:
        - metadata:
            name: data
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 10Gi


  ############################## FIN configsrv



  ############################## inicio sharedsrv


    - apiVersion: v1
      data:
        mongod.conf: |-
          storage:
            dbPath: /opt/mongodb-data
            journal:
              enabled: true
          net:
            port: 27017
            bindIp: 0.0.0.0
          replication:
            replSetName: "shardreplica01"
          sharding:
            clusterRole: sharedsvr
        inicializar.js: |-
          rs.initiate(
            {
              _id : "shardreplica01",
              members: [
                { _id : 0, host : "sharedsrv-0.mongodb-sharedsrv.${NAMESPACE}.svc.cluster.local:27017" },
                { _id : 1, host : "sharedsrv-1.mongodb-sharedsrv.${NAMESPACE}.svc.cluster.local:27017" },
                { _id : 2, host : "sharedsrv-2.mongodb-sharedsrv.${NAMESPACE}.svc.cluster.local:27017" }
                
              ]
            }
          )          
      kind: ConfigMap
      metadata:
        name: mongodb-sharedsrv



    - apiVersion: v1
      kind: Service
      metadata:
        name: mongodb-sharedsrv
        labels:
          app: mongo-cluster
      spec:
        ports:
        - port: 27017
          name: server
        clusterIP: None
        selector:
          service: mongodb-sharedsrv



    - apiVersion: apps/v1beta1
      kind: StatefulSet
      metadata:
        name: sharedsrv
      spec:
        selector:
          matchLabels:
            app: mongo-cluster
        serviceName: mongodb-sharedsrv
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
        replicas: 3
        template:
          metadata:
            annotations:
              alpha.image.policy.openshift.io/resolve-names: '*'
            labels:
              app: mongo-cluster
              service: mongodb-sharedsrv
          spec:
            containers:
            - env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              name: sharedsrv
              image: mongodb:4.2.0
              imagePullPolicy: Always
              command:
              - bash
              - "-c"
              - |
                /opt/mongodb/bin/mongod --config /opt/mongodb-config/mongod.conf
              resources:
                requests:
                  cpu: 500m
                  memory: 1Gi
                limits:
                  cpu: 1
                  memory: 2Gi
              ports:
              - containerPort: 27017
                name: server
              lifecycle:
                postStart:
                  exec:
                    command:
                    - bash
                    - "-c"
                    - |
                      /opt/checkMongo sharedsrv-0.mongodb-sharedsrv.${NAMESPACE}.svc.cluster.local
                      /opt/checkMongo sharedsrv-1.mongodb-sharedsrv.${NAMESPACE}.svc.cluster.local
                      /opt/checkMongo sharedsrv-2.mongodb-sharedsrv.${NAMESPACE}.svc.cluster.local                      
                      /opt/mongodb/bin/mongo < inicializar.js                
              volumeMounts:
              - name: data
                mountPath: /opt/mongodb-data
              - name: configmap
                mountPath: /opt/mongodb-config
              livenessProbe:
                exec:
                  command:
                  - bash
                  - "-c"
                  - |
                    nc -z -v -w5 127.0.0.1 27017
                    if [ "$?" == 0 ]; then
                    exit 0
                    else
                    exit 1
                    fi
                initialDelaySeconds: 90
                timeoutSeconds: 5
              readinessProbe:
                exec:
                  command:
                  - bash
                  - "-c"
                  - |
                    nc -z -v -w5 127.0.0.1 27017
                    if [ "$?" == 0 ]; then
                    exit 0
                    else
                    exit 1
                    fi
                initialDelaySeconds: 30
                timeoutSeconds: 15
            resources:
              requests:
                cpu: 500m
                memory: 128Mi
              limits:
                cpu: 1
                memory: 512Mi                     
            volumes:
            - name: configmap
              configMap:
                name: mongodb-sharedsrv
        volumeClaimTemplates:
        - metadata:
            name: data
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 10Gi


  ############################## FIN sharedsrv


    ############################## inicio router



    - apiVersion: v1
      kind: Service
      metadata:
        name: mongodb-router
        labels:
          app: mongo-cluster
      spec:
        ports:
        - port: 27017
          name: server
        clusterIP: None
        selector:
          service: mongodb-router



    - apiVersion: apps/v1beta1
      kind: StatefulSet
      metadata:
        name: router
      spec:
        selector:
          matchLabels:
            app: mongo-cluster
        serviceName: mongodb-router
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
        replicas: 3
        template:
          metadata:
            annotations:
              alpha.image.policy.openshift.io/resolve-names: '*'
            labels:
              app: mongo-cluster
              service: mongodb-router
          spec:
            containers:
            - env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              name: router
              image: mongodb:4.2.0
              imagePullPolicy: Always
              command:
              - bash
              - "-c"
              - |
                 /opt/checkMongo configsvr-0.mongodb-configsrv.${NAMESPACE}.svc.cluster.local
                 /opt/checkMongo configsvr-1.mongodb-configsrv.${NAMESPACE}.svc.cluster.local
                 /opt/checkMongo configsvr-2.mongodb-configsrv.${NAMESPACE}.svc.cluster.local
                /opt/mongodb/bin/mongos --configdb 'replconfig01/configsvr-0.mongodb-configsrv.${NAMESPACE}.svc.cluster.local:27017,configsvr-1.mongodb-configsrv.${NAMESPACE}.svc.cluster.local:27017,configsvr-2.mongodb-configsrv.${NAMESPACE}.svc.cluster.local:27017'
              resources:
                requests:
                  cpu: 500m
                  memory: 1Gi
                limits:
                  cpu: 1
                  memory: 2Gi
              ports:
              - containerPort: 27017
                name: server
              volumeMounts:
              - name: data
                mountPath: /opt/mongodb-data
              - name: configmap
                mountPath: /opt/mongodb-config
              livenessProbe:
                exec:
                  command:
                  - bash
                  - "-c"
                  - |
                    nc -z -v -w5 127.0.0.1 27017
                    if [ "$?" == 0 ]; then
                    exit 0
                    else
                    exit 1
                    fi
                initialDelaySeconds: 90
                timeoutSeconds: 5
              readinessProbe:
                exec:
                  command:
                  - bash
                  - "-c"
                  - |
                    nc -z -v -w5 127.0.0.1 27017
                    if [ "$?" == 0 ]; then
                    exit 0
                    else
                    exit 1
                    fi
                initialDelaySeconds: 30
                timeoutSeconds: 15
            resources:
              requests:
                cpu: 500m
                memory: 128Mi
              limits:
                cpu: 1
                memory: 512Mi                     
            volumes:
            - name: configmap
              configMap:
                name: mongodb-router
        volumeClaimTemplates:
        - metadata:
            name: data
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 10Gi


  ############################## FIN mongos router





    - apiVersion: v1
      kind: BuildConfig
      metadata:
        labels:
          app: mongo-cluster
          build: mongodb
        name: mongodb
      spec:
        failedBuildsHistoryLimit: 5
        nodeSelector: null
        output:
          to:
            kind: ImageStreamTag
            name: 'mongodb:4.2.0'
        postCommit: {}
        resources: {}
        runPolicy: Serial
        source:
          contextDir: mongodb
          git:
            ref: master
            uri: 'https://github.com/mvilche/mongo-cluster-openshift.git'
          type: Git
        strategy:
          dockerStrategy:
            dockerfilePath: Dockerfile
          type: Docker
        successfulBuildsHistoryLimit: 5
        triggers:
          - type: ConfigChange


    - apiVersion: v1
      kind: ImageStream
      metadata:
        labels:
          app: mongo-cluster
        name: mongodb
      spec: {}

  ########################

  #####################


  ################PARAMETROS
    parameters:
      - name: NAMESPACE
        displayName: Nombre del proyecto donde esta desplegando el template. Respete maysculas y min√∫sculas
        value: ''
        required: true

  ###############
